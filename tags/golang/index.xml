<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Konstantin Wirz</title><link>https://konstantin.wirz.dev/tags/golang/</link><description>Recent content in golang on Konstantin Wirz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 31 Dec 2021 13:49:55 +0100</lastBuildDate><atom:link href="https://konstantin.wirz.dev/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Graceful HTTP Server Shutdown in Go</title><link>https://konstantin.wirz.dev/posts/golang_graceful_shutdown/</link><pubDate>Fri, 31 Dec 2021 13:49:55 +0100</pubDate><guid>https://konstantin.wirz.dev/posts/golang_graceful_shutdown/</guid><description>Suppose we have a longer running operation in one of our http handler, perhaps a important transaction and if we just quit the application the transaction will be interrupted and some important data might be lost. How can we handle that? The solution is quite simple and well known - graceful shutdown and i am going to show you how to implement it in go.
Let&amp;rsquo;s get started. At frist let&amp;rsquo;s implement a simple http server which responses with a bar if we are requesting a /foo</description></item></channel></rss>